{"version":3,"sources":["index.js"],"names":["refs","dateValue","document","querySelector","hoursValue","minsValue","secsValue","startBtn","stopBtn","countdownTimer","targetDate","onTick","intervalId","startTime","setInterval","currentTime","Date","now","deltaTime","time","getTimeComponents","days","clearInterval","pad","Math","floor","hours","mins","secs","value","String","padStart","updateClockface","textContent","timer","start"],"mappings":";;;AAgEA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAhEA,QAAA,eAEA,IAAMA,EAAO,CACXC,UAAWC,SAASC,cAAc,uBAClCC,WAAYF,SAASC,cAAc,wBACnCE,UAAWH,SAASC,cAAc,uBAClCG,UAAWJ,SAASC,cAAc,uBAClCI,SAAUL,SAASC,cAAc,6BACjCK,QAASN,SAASC,cAAc,6BAG5BM,EAAAA,WACgC,SAAA,EAAA,GAAtBC,IAAAA,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,OAAU,EAAA,KAAA,GAC7BC,KAAAA,WAAa,KACbD,KAAAA,OAASA,EACTD,KAAAA,WAAaA,EAiDtB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA9CE,MAAA,WAAQ,IAAA,EAAA,KACAG,EAAY,KAAKH,WAElBE,KAAAA,WAAaE,YAAY,WACtBC,IAAAA,EAAcC,KAAKC,MACnBC,EAAYL,EAAYE,EACxBI,EAAO,EAAKC,kBAAkBF,GAIhCC,GAFJ,EAAKR,OAAOQ,GAERA,EAAKE,KAAO,EAAG,CACjBC,cAAc,EAAKV,YACbO,IAAAA,EAAO,EAAKC,kBAAkB,GACpC,EAAKT,OAAOQ,KAEb,OA+BP,CAAA,IAAA,oBA5BE,MAAA,SAAkBA,GAQT,MAAA,CAAEE,KAPI,KAAKE,IAAIC,KAAKC,MAAMN,EAAQ,QAO1BO,MAND,KAAKH,IACjBC,KAAKC,MAAON,EAAQ,MAAyB,OAKzBQ,KAHT,KAAKJ,IAAIC,KAAKC,MAAON,EAAQ,KAAoB,MAGlCS,KAFf,KAAKL,IAAIC,KAAKC,MAAON,EAAQ,IAAc,SAsB5D,CAAA,IAAA,MAjBE,MAAA,SAAIU,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAgBrC,EArDMtB,GAyCN,SAASuB,EAA6C,GAA3BX,IAAAA,EAAAA,EAAAA,KAAMK,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC5C5B,EAAKC,UAAUgC,YAAcZ,EAC7BrB,EAAKI,WAAW6B,YAAcP,EAC9B1B,EAAKK,UAAU4B,YAAcN,EAC7B3B,EAAKM,UAAU2B,YAAcL,EAG/B,IAAMM,EAAQ,IAAIzB,EAAe,CAC/BC,WAAY,IAAIM,KAAK,gBACrBL,OAAQqB,IAGVE,EAAMC","file":"src.e1df51d1.js","sourceRoot":"..\\src","sourcesContent":["import './main.scss';\n\nconst refs = {\n  dateValue: document.querySelector('[data-value=\"days\"]'),\n  hoursValue: document.querySelector('[data-value=\"hours\"]'),\n  minsValue: document.querySelector('[data-value=\"mins\"]'),\n  secsValue: document.querySelector('[data-value=\"secs\"]'),\n  startBtn: document.querySelector('button[data-action-start]'),\n  stopBtn: document.querySelector('button[data-action-stop]')\n}\n\nclass countdownTimer {\n  constructor({ targetDate, onTick }) {\n    this.intervalId = null;\n    this.onTick = onTick;\n    this.targetDate = targetDate;\n  }\n\n  start() {\n    const startTime = this.targetDate;\n\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = startTime - currentTime;\n      const time = this.getTimeComponents(deltaTime);\n      \n      this.onTick(time);\n\n      if (time.days < 0) {\n        clearInterval(this.intervalId);\n        const time = this.getTimeComponents(0);\n        this.onTick(time);\n      }\n    }, 1000);\n  }\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nfunction updateClockface({ days, hours, mins, secs }) {\n  refs.dateValue.textContent = days;\n  refs.hoursValue.textContent = hours;\n  refs.minsValue.textContent = mins;\n  refs.secsValue.textContent = secs;\n}\n\nconst timer = new countdownTimer({\n  targetDate: new Date('May 16, 2021'),\n  onTick: updateClockface,\n});\n\ntimer.start();\n"]}